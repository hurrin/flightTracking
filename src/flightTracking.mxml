<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:ns="http://openscales.org"
			   width="100%" height="100%"
			   creationComplete="init()"
			   currentState="mapViewState" xmlns:dialogs="dialogs.*">
	
	<s:states>
		<s:State name="mapViewState"/>
		<s:State name="infoDialogState"/>
	</s:states>
	
	<s:transitions>
		
		<s:Transition fromState="mapViewState" toState="infoDialogState" >
			<s:Sequence>
				<s:Parallel>
					
					<s:Fade target="{infoDialog}" />
					<s:Move target="{infoDialog}" yFrom="-200"/>
					
				</s:Parallel>
			</s:Sequence>
		</s:Transition>
		
		<s:Transition fromState="infoDialogState" toState="mapViewState" >
			<s:Sequence>
				<s:Parallel>
					
					<s:Fade target="{infoDialog}" />
					<s:Move target="{infoDialog}" yTo="-200" />
					
				</s:Parallel>
			</s:Sequence>
		</s:Transition>
		
	</s:transitions>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	
	<fx:Script>
		<![CDATA[
			import dto.Airport;
			import dto.Flight;
			import dto.Plane;
			
			import events.FlightEvent;
			
			import mx.controls.Alert;
			import mx.skins.halo.WindowBackground;
			
			import org.openscales.core.Map;
			import org.openscales.core.layer.VectorLayer;
			import org.openscales.geometry.basetypes.Location;
			import org.openscales.proj4as.ProjProjection;
			
			import service.BackendService;
			import service.ObjectsManager;

			private static const MAP_VIEW_STATE:String = "mapViewState";
			private static const INFO_DIALOG_STATE:String = "infoDialogState";

			private var _objectsManager:ObjectsManager;
			private var _refreshTimer:Timer;
			
			private function init():void {	
				_objectsManager = ObjectsManager.instance;
				
				// the TimerEvent would be dispatched every 2 seconds
				// This behaviour will be repeated until stop() function will be called
				_refreshTimer = new Timer(2000);
				_refreshTimer.addEventListener(TimerEvent.TIMER, onTimerEvent);
						
				// configuring map
				if( fxMap.map is Map ){
					_objectsManager.map = fxMap.map as Map;
				}
				_objectsManager.drawLayer = new VectorLayer("geometryLayer");
				_objectsManager.map.addLayer(_objectsManager.drawLayer);
				_objectsManager.map.addEventListener(FlightEvent.SEND_FLIGHT_INFO, showInfoDialog );
				
				// populating map with objects
				_objectsManager.initializeMap();
			}
			
			/**
			 * Refreshing planes positions 
			 */
			private function onTimerEvent(e:TimerEvent):void {
				_objectsManager.refreshPlanesCoords();
			}
			
			
			private function showInfoDialog(e:FlightEvent):void {
				if( currentState == MAP_VIEW_STATE ){
					setCurrentState(INFO_DIALOG_STATE);
					infoDialog.setData(e.flight);	
				} else if( currentState == INFO_DIALOG_STATE ){
					setCurrentState(MAP_VIEW_STATE);
				}
					
			}
			
		]]>
	</fx:Script>

	<ns:Map id="fxMap" width="100%" height="100%" resolution="5000,EPSG:900913" center="10.268157,48.401855" projection="EPSG:900913">
		<ns:Mapnik id="mapnikLayer" name="Mapnik" />
		
		<ns:WheelHandler />
		<ns:DragHandler/>
		
		<ns:ScaleLine x="{width-110}" y="{height-80}"
					  color="#000000"/>
		<ns:Zoom x="{fxMap.width-135}" y="10"
				 color="#000000"/>
		<dialogs:FlightInfoDialog id="infoDialog" includeIn="infoDialogState" x="20" y="150"/>
		
	</ns:Map>
</s:Application>
